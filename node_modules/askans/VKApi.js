/**
 * Created by dekst on 16.04.2016.
 */


var request = require('request');

var entities = require('entities');

/*
 public static function authorizeWithToken($userId,$token){
 if(isset($token)&&isset($userId)){
 if($_SESSION["authorized"]<>1){

 $access_token = json_decode(curl_get(VKSettings::authURL,
 array(
 "client_id" => VKSettings::clientId,
 "client_secret" => VKSettings::clientSecret,
 "v"=>"5.50",
 "grant_type"=>"client_credentials"
 )),true);

 $vkAccess =	json_decode(curl_get(VKSettings::checkTokenURL,array("token"=>$token,"access_token"=>$access_token["access_token"],
 "v"=>"5.50","client_secret"=>VKSettings::clientSecret)),true);

 if(isset($vkAccess["response"])){
 $response = $vkAccess["response"];
 $user = $response["user_id"];

 if($user == $userId){
 $_SESSION["authorized"] = 1;
 $_SESSION["userId"] = $userId;
 $_SESSION["token"] = $token;
 $_SESSION["date"] = $response["date"];
 $_SESSION["expire"] = $response["expire"];

 return true;
 }
 }
 return false;

 }else {

 return false;
 }
 }else {
 return false;
 }


 }

 */

var clientSecret = "zhWle9jyRD6Gn4cwXYlk";
var authURL = "https://oauth.vk.com/access_token";
var clientId = "5368994";
var checkTokenURL = "https://api.vk.com/method/secure.checkToken";

function authorizeWithToken(userId,token,callback) {
    if(userId&&token) {

        request.get(authURL, {
                'client_id': clientId,
                'client_secret': clientSecret,
                'v': '5.50',
                'grant_type': 'client_credentials'
            });
        
            request.on('response', function (response) {
                console.log(response.statusCode)
                console.log(response.headers['content-type']) // 'image/png'

                var access_token = JSON.parse(response);
                request.get(checkTokenURL, {
                        'token': token,
                        'access_token': access_token.access_token,
                        'v': '5.50',
                        'client_secret': clientSecret
                    });
                
                    request.on('response', function (response) {

                        var vkAccess = JSON.parse(response);

                        if (vkAccess.hasOwnProperty('response')) {
                            var vkResponse = vkAccess.response;
                                if (vkResponse.hasOwnProperty('user_id')&&vkResponse.user_id == userId){
                                    
                                  var user = new entities.User(vkResponse.user_id,token,vkResponse.expire);
                                //    return user;
                                    
                                    callback(null,user);
                                    
                                }else {
                                    callback(new entities.VKError("user id mismatch"),null);
                                }
                        }else{

                            callback(new entities.VKError(vkAccess),null);
                        }

                       // callback();
                    });

                request.on('error', function (err) {
                    callback(new entities.VKError(err),null);
               //     console.log(err)
                });

                // var access_token = JSON.parse()


            });

        request.on('error', function (err) {
            callback(new entities.VKError(err),null);
            
            //     console.log(err)
        });
    }
}