/**
 * Created by dekst on 15.04.2016.
 */


var entities = require('entities');

var vkApi = require('./VKApi');

var pg = require('pg');
var conString = "postgres://admin:admin@localhost:5432/postgres";
var connectionString = process.env.DATABASE_URL || conString;
var client = new pg.Client(connectionString);
client.connect(function(err, client, done) {
    if (err)
    console.log(err);
});


var POSTS_TABLE = "posts";
var POSTS_TABLE_ID = "id";
var POSTS_TABLE_OWNER_ID = "owner_id";
var POSTS_TABLE_DATE = "date";
var POSTS_TABLE_POST_TYPE = "post_type";
var POSTS_TABLE_TEXT = "text";

var USERS_TABLE = "users";
var USERS_TABLE_ID = "id";
var USERS_TABLE_TOKEN = "last_token";
var USERS_TABLE_EXPIRED = "expired";

var ROWS_COUNT = "COUNT(*) AS rcount";

exports.createTestUsersTable = function () {
    client.query("DROP TABLE IF EXISTS "+USERS_TABLE);
    var queryCr = client.query("CREATE TABLE IF NOT EXISTS "+USERS_TABLE+"("+USERS_TABLE_ID+" INTEGER PRIMARY KEY, "
        +USERS_TABLE_TOKEN+" varchar(255), "+USERS_TABLE_EXPIRED+" BIGINT)");
    queryCr.on('end', function(result) {
    });

    var queryIns = client.query("INSERT INTO "+USERS_TABLE+"("+USERS_TABLE_ID+","+USERS_TABLE_TOKEN+","+USERS_TABLE_EXPIRED+") VALUES(1,'6tygjg7iguhi', 244343)");
    queryIns.on('end', function(result) {
    });
}


exports.createTestPostsTable = function () {
    client.query("DROP TABLE IF EXISTS "+POSTS_TABLE);
    var queryCr = client.query("CREATE TABLE IF NOT EXISTS "+POSTS_TABLE+"("+POSTS_TABLE_ID+" SERIAL PRIMARY KEY, "+POSTS_TABLE_OWNER_ID+
        " INTEGER, "+POSTS_TABLE_DATE+" BIGINT, "+POSTS_TABLE_POST_TYPE+" BOOLEAN, "+POSTS_TABLE_TEXT+" TEXT)");
    queryCr.on('end', function(result) {

    });

    var queryIns = client.query("INSERT INTO "+POSTS_TABLE+"("+POSTS_TABLE_OWNER_ID+","+POSTS_TABLE_DATE+","
        +POSTS_TABLE_POST_TYPE+","+POSTS_TABLE_TEXT+") VALUES(1,54365456,true,'super text 1hhbhmbx khdk')");
    queryIns.on('end', function(result) {

    });

    var queryIns1 = client.query("INSERT INTO "+POSTS_TABLE+"("+POSTS_TABLE_OWNER_ID+","+POSTS_TABLE_DATE+","
        +POSTS_TABLE_POST_TYPE+","+POSTS_TABLE_TEXT+") VALUES(1,54675456,false,'скучно мне жить')");
    queryIns1.on('end', function(result) {

    });

    var queryIns2 = client.query("INSERT INTO "+POSTS_TABLE+"("+POSTS_TABLE_OWNER_ID+","+POSTS_TABLE_DATE+","
        +POSTS_TABLE_POST_TYPE+","+POSTS_TABLE_TEXT+") VALUES(1,94675456,false,'shgafjhjagshjghj hfsdygj pisos')");
    queryIns2.on('end', function(result) {

    });
}


exports.getUserPosts = function (user,offset,count,callback) {
 //   var tmpCount = 10;




   // var queryStr = "SELECT *,b.count FROM "+POSTS_TABLE+", LATERAL (SELECT COUNT(*) FROM "+POSTS_TABLE+") b WHERE "+POSTS_TABLE_OWNER_ID+" = "+user.id;

   var queryStr = "SELECT * FROM "+POSTS_TABLE+" WHERE "+POSTS_TABLE_OWNER_ID+" = "+user.id;
    if (count)
        queryStr+= " LIMIT "+count;
    if (offset)
        queryStr+= " OFFSET "+offset;

    var query = client.query(queryStr);
    query.on('row', function(row, result) {
    //    console.log("row: "+row);
        result.addRow(row);
    });
    query.on('error', function(result) {
        callback(new entities.VKError(result),null);
    });
    query.on('end', function(resultItems) {

        var queryCountStr = "SELECT COUNT(*) as count FROM "+POSTS_TABLE+"";
        var queryCount = client.query(queryCountStr);

        queryCount.on('row', function(row, result) {
            //    console.log("row: "+row);
            result.addRow(row);
        });
         queryCount.on('end', function(resultCount) {
            callback(null,{response: {count: parseInt(resultCount.rows[0].count), items: resultItems.rows}});

            //   console.log(result);
        });

        queryCount.on('error', function(result) {
            callback(new entities.VKError(result),null);
        });

      //  callback(null,result.rows);

     //   console.log(result);
    });
}

exports.getUsers = function (userIds,callback) {
    if(Array.isArray(userIds)) {
        var queryStr = "SELECT * FROM " + USERS_TABLE + " WHERE " + USERS_TABLE_ID + " IN ("+userIds.toString()+")";
        var query = client.query(queryStr);
        
        query.on('row', function(row, result) {
            result.addRow(row);
        });
        
        query.on('end', function(result) {
            callback(result.rows);
        });

    }
    
}

